version: 2
jobs:
  build:
    working_directory: ~/buendia

    docker:
      - image: projectbuendia/debian-stretch:1.1.0

    steps:
      - checkout # check out the code in the project directory

      - restore_cache:
          keys:
              - buendia-v1-{{ .Branch }}-{{ .Revision }}
              - buendia-v1-{{ .Branch }}
              - buendia-v1-

      - run:
          name: Determine package version number
          command: |
              tools/get_package_version | tee /tmp/buendia-version

      - run:
          name: Restore file mtimes for later package comparison
          command: git restore-mtime
          
      - run:
          name: Build all Debian packages
          command: make -C packages PACKAGE_VERSION=$(cat /tmp/buendia-version)

      - save_cache:
          key: buendia-v1-{{ .Branch }}-{{ .Revision }}
          paths:
            - ~/.m2
            - /tmp/buendia-fetched

      - run:
          name: Collect and store test results
          # https://circleci.com/docs/2.0/collect-test-data/#maven-surefire-plugin-for-java-junit-results
          command: |
            mkdir -p /tmp/artifacts/tests/junit
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} /tmp/artifacts/tests/junit/ \;
          when: always

      - store_test_results:
          path: /tmp/artifacts/tests
             
      - run: 
          name: Collect and store built packages
          command: mkdir -p /tmp/artifacts/packages && cp $(find packages -name '*.deb') /tmp/artifacts/packages

      - store_artifacts:
          path: /tmp/artifacts

      - persist_to_workspace:
          root: /tmp/artifacts
          paths:
            - packages

  apt-archive:
    working_directory: ~/buendia

    docker:
      - image: circleci/buildpack-deps:stretch

    steps:
      - run:
          name: Determine build branch and package suite
          # Decide which branch of projectbuendia/buendia to build from, by
          # checking $TARGET_BRANCH and then falling back to $CIRCLE_BRANCH.
          #
          # Then, choose the target Debian package suite based on the given
          # branch.
          #
          # See `tools/trigger_archive_update` for a usage example.
          #
          # https://circleci.com/docs/2.0/env-vars/#using-bash_env-to-set-environment-variables
          command: |
              # Maybe we're building in CircleCI from a specific branch, or
              # else we were given a target branch by an API call.
              TARGET_BRANCH=${BUENDIA_BRANCH:-$CIRCLE_BRANCH}
              # If neither of those is the case, maybe we're building a release from a tag
              if [ -z "$TARGET_BRANCH" ] && ( echo "$CIRCLE_TAG" | grep -Eq '^v([0-9]+\.?)+$' ); then
                 TARGET_BRANCH=master
              fi
              echo "export BUENDIA_BRANCH=${TARGET_BRANCH}" >> $BASH_ENV
              if [ "${TARGET_BRANCH}" = "master" ]; then
                echo "export BUENDIA_SUITE=stable" >> $BASH_ENV
              elif [ "${TARGET_BRANCH}" = "dev" ]; then
                echo "export BUENDIA_SUITE=unstable" >> $BASH_ENV
              else
                echo "Attempting to build on the ${TARGET_BRANCH} branch, but "
                echo "can only rebuild the apt archive for the 'master' or 'dev' branch!"
                exit 1
              fi
              source $BASH_ENV
              echo "Target branch is ${BUENDIA_BRANCH}; target suite is ${BUENDIA_SUITE}"

      - checkout # check out the code in the project directory

      - attach_workspace:
          at: /tmp/artifacts

      - run:
          name: Fetch latest artifacts (if not already present)
          command: |
              PACKAGES=/tmp/artifacts/packages
              if [ ! -d $PACKAGES -a -n "${CIRCLE_API_TOKEN}" ]; then
                echo -n "Build triggered manually by ${CIRCLE_USERNAME}; "
                mkdir -p $PACKAGES && cd $PACKAGES
                if [ -n "${BUENDIA_TARGET_JOB}" ]; then
                    echo "fetching artifacts from job #${BUENDIA_TARGET_JOB}"
                else
                    echo "fetching artifacts from latest ${BUENDIA_BRANCH} build."
                    BUENDIA_TARGET_JOB=latest
                fi
                $HOME/buendia/tools/fetch_circleci_artifacts -j ${BUENDIA_TARGET_JOB} -g '*.deb' projectbuendia/buendia ${BUENDIA_BRANCH}
              fi

      - restore_cache:
          keys:
            - buendia-builds-v1-{{ .Branch }}-{{ .Revision }}
            - buendia-builds-v1-{{ .Branch }}
            - buendia-builds-v1-

      - add_ssh_keys:
          fingerprints:
            # github.com/projectbuendia/builds read-write key
            - "18:e2:e2:8e:12:49:a1:ca:e6:6f:e1:30:08:02:ae:43"
            # staging.buendia.org deploy key
            - "99:7c:11:11:e7:7b:e8:de:c4:0c:4e:6d:1d:cc:2e:1a"

      - run:
          name: Get the latest builds repository
          ### NOTE: this job must have a key that can read AND write to
          ### github.com/projectbuendia/builds
          command: |
            [ -d builds ] || git clone git@github.com:projectbuendia/builds
            cd builds && \
                  git fetch --force origin gh-pages && \
                  git reset --hard origin/gh-pages && \
                  git checkout -q -B gh-pages

      - run:
          name: Configure the Git user
          command: |
              git config --global user.name "CircleCI Build Process"
              git config --global user.email "zestybuendia@gmail.com"

      - run:
          name: Install apt-utils
          command: sudo apt-get update && sudo apt-get -y install apt-utils

      - run:
          name: Update the package archive
          command: tools/update_apt_archive builds/packages ${BUENDIA_SUITE} /tmp/artifacts/packages

      - save_cache:
          key: buendia-builds-v1-{{ .Branch }}-{{ .Revision }}
          paths:
            - ~/buendia/builds/.git

      - store_artifacts:
          # Carry forward the artifacts from the previous build job
          path: /tmp/artifacts

  deploy-download:
    docker:
      - image: projectbuendia/debian-stretch:1.1.0

    steps:
      - add_ssh_keys:
          fingerprints:
            # staging.buendia.org deploy key
            - "99:7c:11:11:e7:7b:e8:de:c4:0c:4e:6d:1d:cc:2e:1a"

      - deploy:
          name: Deploy to download host
          command: |
            ssh-keyscan $DOWNLOAD_HOST >> $HOME/.ssh/known_hosts
            ssh $SSH_USER@$DOWNLOAD_HOST "cd builds && \
                  git fetch --force origin gh-pages && \
                  git reset --hard origin/gh-pages && \
                  git checkout -q -B gh-pages && \
                  mkdir /var/www/html/deb.new && \
                  git archive gh-pages | tar -C/var/www/html/deb.new --strip-components 1 -xf - packages && \
                  rm -r /var/www/html/deb && \
                  mv /var/www/html/deb.new /var/www/html/deb"

  deploy-staging:
    docker:
      - image: projectbuendia/debian-stretch:1.1.0

    steps:
      - add_ssh_keys:
          fingerprints:
            # staging.buendia.org deploy key
            - "99:7c:11:11:e7:7b:e8:de:c4:0c:4e:6d:1d:cc:2e:1a"

      - deploy:
          name: Deploy to staging host
          command: |
            ssh-keyscan $STAGING_HOST >> $HOME/.ssh/known_hosts
            ssh $SSH_USER@$STAGING_HOST "sudo apt-get update; sudo apt-get -y -f install; sudo apt-get -y upgrade; sudo apt-get -y -f install"

  purge-unstable-repo:
    working_directory: ~/buendia

    docker:
      - image: circleci/openjdk:stretch

    steps:
      - checkout # check out the code in the project directory

      - restore_cache:
          keys:
            - buendia-builds-v1-{{ .Branch }}-{{ .Revision }}
            - buendia-builds-v1-{{ .Branch }}
            - buendia-builds-v1-

      - add_ssh_keys:
          fingerprints:
            # github.com/projectbuendia/builds read-write key
            - "18:e2:e2:8e:12:49:a1:ca:e6:6f:e1:30:08:02:ae:43"

      - run:
          name: Get the latest builds repository
          ### NOTE: this job must have a key that can read AND write to
          ### github.com/projectbuendia/builds
          command: |
            [ -d builds ] || git clone git@github.com:projectbuendia/builds
            cd builds && \
                  git fetch --force origin gh-pages && \
                  git reset --hard origin/gh-pages && \
                  git checkout -q -B gh-pages

      - run:
          name: Configure the Git user
          command: |
              git config --global user.name "CircleCI Build Process"
              git config --global user.email "zestybuendia@gmail.com"

      - run:
          name: Install apt-utils
          # The double `apt-get update` seems to fix an issue with the CircleCI image:
          # https://github.com/CircleCI-Public/gcp-cli-orb/issues/5#issuecomment-467616061
          # ¯\_(ツ)_/¯ 
          command: ( sudo apt-get update || sudo apt-get update ) && sudo apt-get -y install apt-utils

      - run:
          ### NOTE: this step requires Java 8
          name: Purge older unstable packages
          command: tools/purge_older_packages builds packages/unstable

      - run:
          name: Re-index the unstable package suite
          command: |
              cd builds
              ../tools/index_debs packages unstable
              git add packages/dists/unstable
              git commit -m "Automated re-indexing from CircleCI build #${CIRCLE_BUILD_NUM} (${CIRCLE_BUILD_URL})"

      - run:
          name: Force-push the package repo
          command: cd builds && git push --force --all origin

      - save_cache:
          key: buendia-builds-v1-{{ .Branch }}-{{ .Revision }}
          paths:
            - ~/buendia/builds/.git
            - /tmp/buendia-fetched

workflows:
  version: 2
  normal-build:
    jobs:
      - build:
          filters:
            branches:
              # Don't do a normal build for master; instead let the
              # release-build job do the builds off master iff that branch is
              # tagged as part of the documented release process.
              ignore:
                - master
      - apt-archive:
          requires:
            - build
          filters:
            branches:
              only:
                - dev
            tags:
              ignore: /.*/
      - deploy-download:
          requires:
              - apt-archive
      - deploy-staging:
          requires:
              - deploy-download

  release-build:
    # Ensure that tagged releases get their own CircleCI build:
    # https://circleci.com/docs/2.0/workflows/#executing-workflows-for-a-git-tag
    jobs:
      - build:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - apt-archive:
          requires:
            - build
          filters:
            tags:
              only: /^v.*/
      - deploy-download:
          requires:
              - apt-archive

  clean-apt-archive:
    # Eliminate older unstable packages every night at 2am. This is intended to
    # keep the projectbuendia.github.io/builds repo from spiraling out of
    # control in size.
    #
    # https://circleci.com/docs/2.0/workflows/#nightly-example
    triggers:
      - schedule:
          cron: "0 2 * * *"
          filters:
            branches:
              only:
                - dev
    jobs:
      - purge-unstable-repo
