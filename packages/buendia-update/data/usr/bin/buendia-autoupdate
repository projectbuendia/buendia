#!/bin/bash
# Copyright 2015 The Project Buendia Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License.  You may obtain a copy
# of the License at: http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software distrib-
# uted under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
# OR CONDITIONS OF ANY KIND, either express or implied.  See the License for
# specific language governing permissions and limitations under the License.

set -e; . /usr/local/opt/buendia/utils.sh

if [ "$1" = "-h" ]; then
    echo "Usage: $0 [-u <seconds>]"
    echo
    echo "(buendia-autoupdate is designed to be run by cron; if you want to"
    echo "manually start a software update, use buendia-update.)"
    echo
    echo "Updates all the Buendia packages by triggering buendia-update, then"
    echo "reboots if necessary.  To avoid pointless work, skips the update if"
    echo "none of the remote repositories are reachable and nothing has"
    echo "changed in the local repository since the last run."
    echo
    echo "Performs the update only if UPDATE_AUTOUPDATE is set to 1 in"
    echo "/usr/local/opt/buendia/site."
    echo
    echo "Specify -u <n> to perform the update only if the machine has been"
    echo "up for at least <n> seconds.  Use this option to avoid running"
    echo "updates while the machine is still doing other startup work."
    exit 1
fi

if [ "$1" = "-u" ]; then
    min_upsecs="$2"
    upsecs=$(grep -o '[0-9]\+' /proc/uptime | head -1)
    if [ "$upsecs" -lt "$min_upsecs" ]; then
        echo "Not autoupdating: uptime ($upsecs s) has not reached $min_upsecs s yet."
        exit 1
    fi
fi

if ! bool $UPDATE_AUTOUPDATE; then
    echo "Not autoupdating: UPDATE_AUTOUPDATE is disabled."
    exit 0
fi

# Tracks the last successfully completed update triggered by this script.
success=/usr/local/opt/buendia/autoupdate.success
packages=/usr/local/opt/buendia/packages

# To keep from locking the package cache too often, skip out if we can
# determine that there are no reachable servers with updates available.
urls=$(cat /etc/apt/sources.list /etc/apt/sources.list.d/* |
       grep -o 'http:[^ ]*' | sort | uniq)
for url in $urls; do
    hostname=$(echo "$url" | sed -e 's+^[^:]*[:/]*\([^:/]*\).*+\1+')
    if [ "$hostname" = "localhost" ]; then
        if [ ! -f $success ]; then
            available=1
            break
        fi
        if [ -e $packages ] && find $packages -newer $success | grep -q .; then
            available=1
            break
        else
            echo "Nothing new in the local package repository."
        fi
    else
        if curl -m 10 -s $url >/dev/null; then
            available=1
            break
        fi
    fi
done

if [ -z "$available" ]; then
    echo "Not autoupdating: no reachable repositories with new packages."
    exit 1
fi

echo "Starting autoupdate."

# Record successful completion of this update.
buendia-update && touch $success

if [ -f /var/run/reboot-required ]; then
    echo "Rebooting after package update."
    # Rebooting: yellow only
    buendia-led red off || true
    buendia-led yellow on || true
    buendia-led green off || true
    reboot  # files in /var/run will be cleaned on boot
else
    echo "Update complete."
fi
