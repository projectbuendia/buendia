#!/bin/bash
# Copyright 2015 The Project Buendia Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License.  You may obtain a copy
# of the License at: http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software distrib-
# uted under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
# OR CONDITIONS OF ANY KIND, either express or implied.  See the License for
# specific language governing permissions and limitations under the License.

# When the server is in wifi client mode (connecting to an external AP), we've
# observed that it sometimes loses its connection to the wifi AP after a
# couple of days, resulting in a major outage of the system; we don't know if
# it's due to the server's wifi hardware, driver software, or a problem with
# the wifi AP.  However, we do know that in this state a simple reboot brings
# everything back to working order.  This watchdog checks if the server has
# fallen off the wifi network, and kicks wpa_supplicant to make it rejoin.

set -e
. /usr/share/buendia/utils.sh

# If a software update is in progress, we don't want to interfere with it.
exec 9> /var/run/lock/buendia-update
if ! flock -s -n 9; then
    echo "Not checking wifi: buendia-update is currently running."
    exit 1
fi

# If it's only been a couple of minutes since boot, the server is still coming
# up; don't expect networking to be up yet.
min_upsecs=${NETWORKING_WATCHDOG_MIN_UPTIME:-15}
upsecs=$(grep -o '[0-9]\+' /proc/uptime | head -1)
if [ "$upsecs" -lt "$min_upsecs" ]; then
    echo "Not checking wifi: uptime ($upsecs s) has not reached $min_upsecs s yet."
    exit 1
fi

# The observed problem occurs when the server is a wifi client, not a wifi AP.
if bool "$NETWORKING_AP"; then
    echo "Not checking wifi: server is an AP creating its own wifi network."
    exit 1
fi

if [ -z "$NETWORKING_SSID" ]; then
    echo "Not checking wifi: NETWORKING_SSID is unset."
    exit 1
fi

# The "wpa_cli" command tells us the status of the wifi client subsystem.
tmpfile=/tmp/$(basename $0).$$
trap 'rm -rf $tmpfile' EXIT
echo wpa_cli -i $NETWORKING_WIFI_INTERFACE status
wpa_cli -i $NETWORKING_WIFI_INTERFACE status >$tmpfile 2>&1 || true

cat $tmpfile  # cause the output of wpa_cli status to appear in the log

# If wpa_supplicant is not running at all, wpa_cli status will just contain
# an error message.  If wpa_supplicant is up but not (yet) connected to an AP,
# wpa_cli status will say that the state is something other than COMPLETED,
# such as SCANNING or DISCONNECTED or ASSOCIATING.  In all of these cases, we
# just want to restart the wifi connection.
if ! grep -q wpa_state=COMPLETED $tmpfile; then
    echo "Restarting wifi."
    # "-f" means to force redoing network setup even though the network
    # configuration settings haven't changed.
    buendia-reconfigure -f networking
else
    # Update the current wifi watchdog state for the benefit of the security
    # monitor, if installed.
    mv $tmpfile /run/buendia-networking.state
fi
