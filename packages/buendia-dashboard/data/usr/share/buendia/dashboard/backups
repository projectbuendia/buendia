#!/bin/bash
# Copyright 2015 The Project Buendia Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License.  You may obtain a copy
# of the License at: http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software distrib-
# uted under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
# OR CONDITIONS OF ANY KIND, either express or implied.  See the License for
# specific language governing permissions and limitations under the License.

set -e

usb_devices=$(ls /dev/sd* | wc -l)
if [ $usb_devices -eq 2 ]; then
	usb_status="USB device connected ($(ls /dev/sd* | sed -e 's/\/dev\/[a-z][a-z][a-z]$//') )"
else
	usb_status="No USB device recognised. If you have one plugged in, try disconnecting the cable and reconnecting it."
fi

buendia_status=$(cat /home/buendia/server_status.txt)

if [ $buendia_status -eq 2 ]; then
	current_status="<b>Currently backing up internally...</b> (this will take 1-2 minutes, refreshing every 10s...)<script>setTimeout('window.location = \"\"', 10000)</script>"
elif [ $buendia_status -eq 3 ]; then
	current_status="<b>Currently backing up to USB...</b> (this will take 1-2 minutes, refreshing every 10s...)<script>setTimeout('window.location = \"\"', 10000)</script>"
elif [ $buendia_status -eq 4 ]; then
	current_status="<b>Last backup failed</b> (see backup log below for details)"
elif [ $buendia_status -eq 5 ]; then
	current_status="<b>Currently restoring from backup...</b> (this will take 10-20 minutes, refreshing every 10s...)<script>setTimeout('window.location = \"\"', 10000)</script>"
elif [ $buendia_status -eq 6 ]; then
	current_status="<b>Last restore failed</b> (see restore log below for details)"
elif [ $buendia_status -eq 1 ]; then
	current_status="<b>Last backup/restore succeeded</b>"
fi

num_backups_failed=$(cat -v /var/log/buendia/buendia-backup.log | grep '(end, status 1)' | wc -l)
failed_backups=$(cat -v /var/log/buendia/buendia-backup.log | grep '(end, status 1)' | sed -e 's/^/<li>/' -e 's/:[0-9][0-9]\W*[0-9]*> .*/<\/li>/')

num_backups_done=$(cat -v /var/log/buendia/buendia-backup.log | grep '(end, status 0)' | wc -l)
successful_backups=$(cat -v /var/log/buendia/buendia-backup.log | grep '(end, status 0)' | sed -e 's/^/<li>/' -e 's/:[0-9][0-9]\W*[0-9]*> .*/<\/li>/')

num_restores_done=$(cat -v /var/log/buendia/buendia-restore.log | grep '(end, status 0)' | wc -l)
successful_restores=$(cat -v /var/log/buendia/buendia-restore.log | grep '(end, status 0)' | sed -e 's/^/<li>/' -e 's/:[0-9][0-9]\W*[0-9]*> .*/<\/li>/')

backup_log=$(cat -v /var/log/buendia/buendia-backup.log | grep '(end, status 1)' -B 100 | sed -e 's/^/<br\/>/')
restore_log=$(tail -100 /var/log/buendia/buendia-restore.log | sed -e 's/^/<br\/>/')

cat <<EOF
Content-Type: text/html

<link rel="stylesheet" href="style.css">

<h1>Backup and Restore Status</h1>

<p><a href="/">Back to dashboard</a>

<p>USB status:
<br/><b>$usb_status</b>

<p>Backup / restore status:
<br/>$current_status

<h2>Restore history</h2>
<p>
$num_restores_done restore(s) successfully completed:
<ul>
$successful_restores
</ul>

<h2>Backup history</h2>
<p>
$num_backups_failed backup(s) failed:
<ul>
$failed_backups
</ul>

<p>
$num_backups_done backup(s) successfully completed:
<ul>
$successful_backups
</ul>

<h2>Backup log (most recent failed backup)</h2>
<small>$backup_log</small>

<h2>Restore log (most recent)</h2>
<small>$restore_log</small>

<p><a href="/">Back to dashboard</a>
EOF
